{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","className","props","event","name","local_date","onClick","description","Component","EventList","events","map","key","id","mockEvents","city","lat","lon","country","zip","member_count","created","duration","rsvp_limit","date_in_series_pattern","status","time","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","venue","repinned","address_1","localized_country_name","group","join_mode","urlname","who","localized_location","region","timezone","link","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","name_string","getAccessToken","token","url","axios","get","result","console","log","data","length","localStorage","setItem","JSON","stringify","getEvents","page","navigator","onLine","getItem","parse","accessToken","code","URLSearchParams","search","getOrRenewAccessToken","lastSavedTime","Date","now","type","tokenInfo","access_token","refresh_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","suggestions","infoText","handleInputChanged","value","target","apiSuggestions","Array","isArray","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","numberOfEvents","App","defaultCity","then","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.c12f10e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Event extends Component {\r\n  state = {\r\n    // event: [],\r\n    showDetails: false\r\n  }\r\n  handleShowDetails = () => {\r\n    if(this.state.showDetails === false) {\r\n      this.setState({ showDetails: true });\r\n    }\r\n    else {\r\n      this.setState({ showDetails: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const showDetails = this.state.showDetails;\r\n\r\n    return(\r\n      <div className=\"event\">\r\n      <div className=\"event__Overview\">\r\n      <p className=\"event__Overview--name\">{this.props.event.name}</p>\r\n          <p className=\"event__Overview--localDate\">{this.props.event.local_date}</p>\r\n          <button className=\"details-btn\" onClick={() => this.handleShowDetails()}>show details</button>\r\n        </div>\r\n        {showDetails &&\r\n          <div className=\"event__Details\">\r\n             <p className=\"event__Details--description\">{this.props.event.description}</p>\r\n          </div>\r\n        }\r\n      </div>\r\n  );\r\n}\r\n}\r\nexport default Event;","import React from 'react';\r\nimport Event from './Event';\r\n\r\n\r\nconst EventList = ({events: { events } }) => {\r\n  return(\r\n    <ul className=\"EventList\">\r\n    {events.map(event =>\r\n      <li key={event.id}>\r\n        <Event event={event} />\r\n      </li>\r\n    )}\r\n  </ul> \r\n  );\r\n}\r\n\r\n\r\nexport default EventList;","const mockEvents = {\r\n  city: {\r\n    id: 1007700,\r\n    city: \"MÃ¼nchen\",\r\n    lat: 48.14,\r\n    lon: 11.58,\r\n    state: \"\",\r\n    country: \"de\",\r\n    zip: \"meetup3\",\r\n    member_count: 1257\r\n  },\r\n  events:[\r\n    {\r\n      created: 1563825339000,\r\n      duration: 9000000,\r\n      id: \"263370107\",\r\n      name: \"Microservices mit dem MicroProfile 3.x\",\r\n      rsvp_limit: 80,\r\n      date_in_series_pattern: false,\r\n      status: \"upcoming\",\r\n      time: 1566925200000,\r\n      local_date: \"2019-08-27\",\r\n      local_time: \"19:00\",\r\n      updated: 1563825339000,\r\n      utc_offset: 7200000,\r\n      waitlist_count: 79,\r\n      yes_rsvp_count: 80,\r\n      venue: {\r\n      id: 26266792,\r\n      name: \"adesso AG\",\r\n      lat: 53.54524230957031,\r\n      lon: 9.950983047485352,\r\n      repinned: false,\r\n      address_1: \"GroÃe ElbstraÃe 36\",\r\n      city: \"Hamburg\",\r\n      country: \"de\",\r\n      localized_country_name: \"Deutschland\"\r\n      },\r\n      group: {\r\n      created: 1387402147000,\r\n      name: \"Java User Group Hamburg\",\r\n      id: 11500362,\r\n      join_mode: \"open\",\r\n      lat: 53.54999923706055,\r\n      lon: 10,\r\n      urlname: \"jug-hamburg\",\r\n      who: \"Mitglieder\",\r\n      localized_location: \"Hamburg, Deutschland\",\r\n      state: \"\",\r\n      country: \"de\",\r\n      region: \"de_DE\",\r\n      timezone: \"Europe/Berlin\"\r\n      },\r\n      link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\r\n      description: \"<p>Wer Microservices in Java entwickeln mÃ¶chte, muss nicht zwangslÃ¤ufig zu Spring Boot greifen. Es lohnt ein Blick auf alternative Frameworks, die in zunehmender Anzahl verfÃ¼gbar sind und bezÃ¼glich ihrer FunktionalitÃ¤t stark aufholen. So schreitet auch die Entwicklung des MicroProfiles weiter voran. In beeindruckender Geschwindigkeit wurden zahlreiche APIs entwickelt, die (nicht nur) fÃ¼r die Entwicklung von Microservices sehr hilfreich sind.<br/>Hierzu zÃ¤hlen die UnterstÃ¼tzung von Metriken, Health Checks, Fault Tolerance und JSON Web Tokens. FÃ¼r den Einsatz im Projekt kann aus unterschiedlichen Implementierungen wie TomEE, Thorntail oder OpenLiberty gewÃ¤hlt werden. In dieser Live-Coding-Session wird der praktische Einsatz von MicroProfile anhand eines Praxisbeispiels demonstriert.<br/> <br/> <br/>Referent:<br/>Thilo Frotscher arbeitet als freiberuflicher Softwarearchitekt und Trainer. Als Experte fÃ¼r Enterprise Java und Systemintegration unterstÃ¼tzt er seine Kunden Ã¼berwiegend durch Entwicklung, Reviews oder die DurchfÃ¼hrung von Schulungen. Thilo ist (Co-)Autor mehrerer BÃ¼cher in den Bereichen Java EE, (Web) Services und Systemintegration, hat zahlreiche Fachartikel verfasst und spricht regelmÃ¤Ãig auf Fachkonferenzen und Schulungsveranstaltungen oder bei Java User Groups.</p> \",\r\n      visibility: \"public\",\r\n      member_pay_fee: false\r\n    }\r\n  ]\r\n};\r\n\r\nexport { mockEvents };","import axios from 'axios';\r\nimport { mockEvents } from './mock-events';\r\n\r\nasync function getSuggestions(query) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return [{\r\n        city: 'Munich',\r\n        country: 'de',\r\n        localized_country_name: 'Germany',\r\n        name_string: 'Munich, Germany',\r\n        zip: 'meetup3',\r\n        lat: 48.14,\r\n        lon: 11.58\r\n      },\r\n      {\r\n        city: 'Munich',\r\n        country: 'us',\r\n        localized_country_name: 'USA',\r\n        state: 'ND',\r\n        name_string: 'Munich, North Dakota, USA',\r\n        zip: '58352',\r\n        lat: 48.66,\r\n        lon: -98.85\r\n      }\r\n    ];\r\n  }\r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    const url = 'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=' +\r\n      query +\r\n      '&access_token=' + token;\r\n    const result = await axios.get(url);\r\n    console.log('testing results', result)\r\n    console.log( 'another teest' , result.data)\r\n    // return result.data;\r\n    const events = result.data.events;\r\n    if(events.length) {\r\n      localStorage.setItem('lastEvents', JSON.stringify(events));\r\n    }\r\n    return events;\r\n  }\r\n  return [];\r\n};\r\n\r\n\r\nasync function getEvents(lat, lon, page) {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n    return mockEvents;\r\n  }\r\n  if(!navigator.onLine){\r\n    const events = localStorage.getItem('lastEvents');\r\n    return JSON.parse(events)\r\n  };\r\n  \r\n  const token = await getAccessToken();\r\n  if (token) {\r\n    let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n      + '&access_token=' + token;\r\n    // lat, lon is optional; if you have a lat and lon, you can add them\r\n    if (lat && lon) {\r\n      url += '&lat=' + lat + '&lon=' + lon;\r\n    }\r\n    if (page) {\r\n      url += '&page=' + page;\r\n    }\r\n    if (lat && lon && page) {\r\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\r\n    }\r\n    const result = await axios.get(url);\r\n    return result.data;\r\n  }\r\n};\r\n\r\n\r\n\r\n//testing \r\n\r\n// async function getNewListOfEvents(lat, lon, page = '1') {\r\n//   if (window.location.href.startsWith('http://localhost')) {\r\n//     return mockEvents;\r\n//   }\r\n  \r\n//   const token = await getAccessToken();\r\n\r\n//   if (token) {\r\n//     let url = 'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public'\r\n//       + '&access_token=' + token;\r\n\r\n//     if (lat && lon && page) {\r\n//       url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\r\n//     }\r\n//     const result = await axios.get(url);\r\n//     return result.data;\r\n//   }\r\n\r\n// };\r\n  \r\n\r\n\r\nfunction getAccessToken(){\r\n    const accessToken = localStorage.getItem('access_token');\r\n\r\n    if (!accessToken) {\r\n      const searchParams = new URLSearchParams(window.location.search);\r\n      const code = searchParams.get('code');\r\n  \r\n\r\n      if (!code) {\r\n        window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=rhn3t2og7hsen40fqej3nr42e6&response_type=code&redirect_uri=https://enyelsequeira.github.io/meetup/';\r\n        // window.location.href = 'https://secure.meetup.com/oauth2/authorize?client_id=rhn3t2og7hsen40fqej3nr42e6&response_type=code&redirect_uri=https://enyelsequeira.github.io/';\r\n        }\r\n        return getOrRenewAccessToken('get', code);\r\n    }\r\n\r\n    const lastSavedTime = localStorage.getItem('last_saved_time');\r\n\r\n  if (accessToken && (Date.now() - lastSavedTime < 3600000)) {\r\n    return accessToken\r\n  }\r\n\r\n  const refreshToken = localStorage.getItem('refresh_token');\r\n\r\n  return getOrRenewAccessToken('renew', refreshToken);\r\n};\r\n\r\n  async function getOrRenewAccessToken(type, key) {\r\n    let url;\r\n    if (type === 'get') {\r\n      // Lambda endpoint to get token by code\r\n      url = 'https://vzf28f072l.execute-api.eu-central-1.amazonaws.com/dev/api/token/'\r\n        + key;\r\n    } else if (type === 'renew') {\r\n      // Lambda endpoint to get token by refresh_token\r\n      url = 'https://vzf28f072l.execute-api.eu-central-1.amazonaws.com/dev/api/refreshtoken/'\r\n        + key;\r\n    }\r\n  \r\n    // Use Axios to make a GET request to the endpoint\r\n    const tokenInfo = await axios.get(url);\r\n  \r\n    // Save tokens to localStorage together with a timestamp\r\n    localStorage.setItem('access_token', tokenInfo.data.access_token);\r\n    localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\r\n    localStorage.setItem('last_saved_time', Date.now());\r\n  \r\n    // Return the access_token\r\n    return tokenInfo.data.access_token;\r\n  };\r\n\r\nexport { getSuggestions, getEvents, getAccessToken }\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class Alert extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n    getStyle =() =>{\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props){\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\nclass ErrorAlert extends Alert {\r\n    constructor(props){\r\n        super(props);\r\n        this.color = 'red'\r\n    }\r\n}\r\n\r\n\r\nexport { InfoAlert, ErrorAlert}\r\n","import React, { Component } from 'react';\r\nimport { getSuggestions } from './api';\r\nimport { InfoAlert } from './Alert'\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n    query: '',\r\n    suggestions: [],\r\n    infoText: ''\r\n  };\r\n\r\n\r\n  handleInputChanged = async (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ query: value });\r\n    const apiSuggestions = await getSuggestions(value);\r\n    if (Array.isArray(apiSuggestions) === false || apiSuggestions.length === 0) {\r\n      this.setState({\r\n        infoText: ' We can not find the city you are looking for. Please try another city',\r\n      });\r\n    } else {\r\n      this.setState({\r\n        infoText: '',\r\n        suggestions: [...apiSuggestions]\r\n      });\r\n    }\r\n    console.log( 'testing', apiSuggestions)\r\n  };\r\n//   handleInputChanged = event => {\r\n//     const value = event.target.value;\r\n//     this.setState({ query: value });\r\n//     getSuggestions(value).then(suggestions => {\r\n//      this.setState({ suggestions });\r\n\r\n//     if (value && suggestions.length === 0 ){\r\n//       this.setState({\r\n//         infoText: ' We can not find the city you are looking for. Please try another city',\r\n//       });\r\n//     } else {\r\n//       this.setState({\r\n//         infoText: '',\r\n//       });\r\n//     }\r\n//   })\r\n// };\r\n\r\n  handleItemClicked = (value, lat, lon) => {\r\n    this.setState({ query: value, suggestions: [] });\r\n    this.props.updateEvents(lat, lon);\r\n  };\r\n\r\n  render() {\r\n    console.log('state', this.state);\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <input\r\n          type=\"text\"\r\n          className=\"city\"\r\n          value={this.state.query}\r\n          onChange={this.handleInputChanged}\r\n          placeholder='your city of choice'\r\n        />\r\n\r\n        <ul className=\"suggestions\">\r\n          {this.state.suggestions.map(item => (\r\n            <li \r\n            key={item.name_string}\r\n            onClick={() =>\r\n              this.handleItemClicked(item.name_string, item.lat, item.lon)\r\n            \r\n            }>\r\n              {item.name_string}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    numberOfEvents: 32,\r\n    infoText: ''\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ numberOfEvents: value });\r\n    this.props.updateEvents(null, null, value);\r\n\r\n    if(value < 1) {\r\n      this.setState({\r\n        infoText: 'number of events must be 1 or greater'\r\n      });\r\n    }else{\r\n      this.setState({\r\n        infoText:'',\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return(\r\n      <div className=\"numberOfEvents\">\r\n        <label>Number of Events: </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"numberOfEvents__input\"\r\n          value={this.state.numberOfEvents}\r\n          onChange={this.handleInputChanged}\r\n        />\r\n        <ErrorAlert text={this.state.infoText} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents } from './api';\r\n// import { getNewListOfEvents } from './api'\r\n\r\n\r\n\r\n\r\nclass App extends Component{\r\n\r\n  componentDidMount() {\r\n    getEvents().then(response => this.setState({ events: response }));\r\n  }\r\n\r\n  state = {\r\n    page: null,\r\n    defaultCity: '',\r\n    lat: null,\r\n    lon: null,\r\n  }\r\n\r\n  updateEvents = (lat, lon, page) => {\r\n    if(lat && lon) {\r\n      getEvents(lat, lon, this.state.page).then(response => this.setState({ events: response, lat, lon }));\r\n\r\n    }\r\n    else if (page) {\r\n      getEvents(this.state.lat, this.state.lon, page).then(response => this.setState({ events: response, page }));\r\n    }\r\n    else {\r\n      getEvents(this.state.lat, this.state.lon, this.state.page).then(response => this.setState({ events: response }));\r\n      }\r\n  }\r\n\r\n  render() {\r\n    console.log('test', this.state)\r\n    return (\r\n      <div className=\"App\">\r\n      <CitySearch updateEvents={this.updateEvents} />\r\n      {this.state.events && <EventList events={this.state.events} />}\r\n      {this.state.events && <NumberOfEvents \r\n        updateEvents={this.updateEvents}\r\n        numberOfEvents={this.state.events.length}\r\n        lat={this.state.lat} \r\n        lon={this.state.lon} />}\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as atatus from 'atatus-spa';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config('58db6860e5a9407b94af6934c1c00257').install();\n\n"],"sourceRoot":""}